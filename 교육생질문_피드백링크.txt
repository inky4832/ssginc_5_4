# 쇼핑몰 구축 가이드
https://support.cafe24.com/hc/ko/articles/7668080790937-%EC%87%BC%ED%95%91%EB%AA%B0-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0

# 관리자 계정 인증 방식 
https://techdocs.broadcom.com/kr/ko/symantec-security-software/endpoint-security-and-management/endpoint-protection/all/managing-groups-clients-and-administrators/managing-administrator-accounts-v17364367-d1e6/choosing-the-authentication-method-for-administrat-v9542292-d1e613.html
https://support.eximbay.com/hc/ko/articles/19893888611737-%EA%B4%80%EB%A6%AC%EC%9E%90%ED%8E%98%EC%9D%B4%EC%A7%80-Admin-%EB%A1%9C%EA%B7%B8%EC%9D%B8-2%EC%B0%A8-%EC%9D%B8%EC%A6%9D-%EB%B0%A9%EB%B2%95%EC%9D%B4-%EA%B6%81%EA%B8%88%ED%95%A9%EB%8B%88%EB%8B%A4

//////////////////////////////////////////////////////////////////////////////////////

# AI 플랫폼
- 무료 AI 도구
 ## 구글
https://cloud.google.com/use-cases/free-ai-tools?hl=ko

 ## AWS
https://aws.amazon.com/ko/free/ai/

 ## naver
https://api-fin.ncloud-docs.com/docs/home

//////////////////////////////////////////////////////////////////////////////////////

# 케이스 분석 샘플
## 케이스 분석1 - SSG 
https://blog.naver.com/ameliejeong/223505593627

## 케이스 분석2 - 마켓컬리
https://blog.naver.com/ameliejeong/223496701695

## 케이스 분석3 - 쿠팡
https://blog.naver.com/ameliejeong/223488884290

//////////////////////////////////////////////////////////////////////////////////////
# QR코드 + Firebase 연동
## 안드로이드 - QR코드 스캔하여 Firebase Realtime Database에 저장
https://seopseop911.tistory.com/37

## Firebase & Spring-boot 연동
https://data-make.tistory.com/768

//////////////////////////////////////////////////////////////////////////////////////
# 결제연동 API 제공

## 부트페이
https://www.bootpay.co.kr/

## 카카오페이
https://developers.kakaopay.com/docs/getting-started/basic/developers-intro

## 토스
https://developers.tosspayments.com/

## 외부 API 결제 솔루션
https://portone.io/korea/ko
https://sdk-playground.portone.io/
https://github.com/iamport/rest-client-nodejs

////////////////////////////////////////////////////////////////////////////
# 엘라스틱 서치 ( Elasticsearch )
https://esbook.kimjmin.net/


/////////////////////////////////////////////////////////////////////////
# SpringSecurity 와 Oauth 2.0 개념
https://its-ward.tistory.com/entry/Spring-Security%EC%99%80Oauth-20-%EA%B0%9C%EB%85%90-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0

# react + daum 주소 API 사용
https://velog.io/@eunjios/react-daum-postcode-practice

# SpringBoot + Zxing 연동
https://lucas-owner.tistory.com/55

# axios + POST + JSON
https://britny-no.tistory.com/32


# http --> https 
https://ngrok.com/

만약 ngrok에서 6024 에러가 날때 해결 방법
        headers: {
          'Content-Type': `application/json`,
          'ngrok-skip-browser-warning': '69420',
        },
https://velog.io/@se2id/ngrok-skip-browser-warning-ERRNGROK6024%EC%97%90%EB%9F%AC-Get%EC%9A%94%EC%B2%AD%EC%8B%9C-doctype-html-%EB%9C%B0-%EB%95%8C

# mybatis에서  underscore로 된 컬럼을  Camel로 된 자바변수로 자동 맵핑
mybatis.configuration.map-underscore-to-camel-case=true


# axios 
import axios from 'axios';

const apiClient = axios.create(
  {  
    baseURL:'https://reqres.in/'
  }
);

export async function axiosUsersList() {
  let resData;

    const response = await apiClient.get("/api/users?page=2");
    console.log(response)
    if (!response === 200) {
      console.log("fetchUsersList.ERROR")
      throw new Error('usersList 요청 예외');
    }
     resData = await response.data.data;

  return resData;
}

# 장바구니 
==> 장바구니와 장바구니 아이템을 분리해서 구현

public class BasketDTO{

     String basketId;
     String userId;
     ..
     List<BasketItemDTO> items;

    class BasketItemDTO{

         String productId;
         String productName;
         ...

    }
}

